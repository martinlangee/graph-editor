<UserControl x:Class="GraphEditor.Ui.EditorArea"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:GraphEditor.Ui.ViewModel"
             xmlns:cv="clr-namespace:GraphEditor.Ui.Converters"
             mc:Ignorable="d" 
             AllowDrop="True"
             Loaded="Editor_Loaded"
             Unloaded="Editor_Unloaded"
             Background="WhiteSmoke"
             d:DesignHeight="450" d:DesignWidth="800" d:DataContext="{d:DesignInstance vm:AreaViewModel}">
    <UserControl.Resources>
        <cv:BytesToImageConverter x:Key="BytesToImageConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Canvas Grid.Row="1" x:Name="_canvas" MouseLeftButtonUp="Canvas_OnMouseLeftButtonUp">
            <Canvas.Style>
                <Style TargetType="{x:Type Canvas}">
                    <Setter Property="Background">
                        <Setter.Value>
                            <VisualBrush TileMode="Tile" Viewport="{Binding GridRect}" ViewportUnits="Absolute" Viewbox="{Binding GridRect}" ViewboxUnits="Absolute">
                                <VisualBrush.Visual>
                                    <Rectangle Width="1" Height="1" Fill="Gray" SnapsToDevicePixels="True"/>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ToolBar.IsGridVisible}" Value="false">
                            <Setter Property="Background" Value="Transparent"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Canvas.Style>
            <Canvas.ContextMenu>
                <ContextMenu ItemsSource="{Binding AreaContextMenuItems}">
                    <ContextMenu.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                            <Setter Property="Header" Value="{Binding Name}"/>
                            <Setter Property="Command" Value="{Binding DataContext.AddNodeCommand, RelativeSource={RelativeSource AncestorType={x:Type Canvas}}}"/>
                            <Setter Property="CommandParameter" Value="{Binding}"/>
                            <Setter Property="Icon" Value="{Binding Icon, Converter={StaticResource BytesToImageConverter}}"/>
                        </Style>
                    </ContextMenu.ItemContainerStyle>
                </ContextMenu>
            </Canvas.ContextMenu>
        </Canvas>
        <Grid Grid.RowSpan="2" Background="Black" Opacity="0.4">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding NodeConfigUi}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
        <StackPanel Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center">
            <StackPanel.Style>
                <Style TargetType="{x:Type StackPanel}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding NodeConfigUi}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <ContentPresenter Content="{Binding NodeConfigUi}"/>
        </StackPanel>
    </Grid>
</UserControl>
